@startuml

interface parser_if {
  + parser_ptr_t
  + parser_algorith_t
  + parsed_value_t
  + EOL
  + OK
  + parse()
}

abstract class simple_token {
  + parse()
  + {abstract} get_token()
  + is_value_ok()
}

class source {
  - SOURCE_TOKEN
  + get_token()
}

class status {
  - STATUS_TOKEN = "STATUS:"
  + get_token()
}

class clear {
  - CLEAR_TOKEN = "PROGRESS:"
  + {static} SOURCE_TOKEN = "CLEAR"
  + get_token()
  + is_value_ok()
}

class command {
  - COMMAND_TOKEN = "COMMAND: "
  + {static} SOURCE_TOKEN = "COMMAND"
  + get_token()
}

class at {
  - BEGIN_TOKEN = "AT:START\\r\\n"
  - END_TOKEN = "AT:STOP\\r\\n"
  + parse()
}

class source_command {
  + is_value_ok()
}

class address {
  - ADDRESS_TOKEN = "ADDRESS: "
  - ADDRESS_SIZE
  + get_token()
  + is_value_ok()
}

namespace commands {

class specific_command {
  - commnad
  + is_value_ok()
}

class test {
  + COMMAND_TEST_TOKEN = "TEST?"
  + parse()
  + get_command_token()
}

class test_flash {
  - FLASH_TOKEN = "FLASH:"
  + get_token()
}

class test_radio {
  - RADIO_TOKEN = "RADIO:"
  + get_token()
}

class test_backup {
  - BACKUP_TOKEN = "BACKUP:"
  + get_token()
}

class xtal_correction {
  - COMMAND_SET_XTAL_CORRECTION_TOKEN = "CRYSTALCORRECTION"
  - COMMAND_GET_XTAL_CORRECTION_TOKEN = "CRYSTALCORRECTION?"
  - TAL_CORRECTION_TOKEN = "VALUE: "
  + parse()
  + get_token()
  + is_value_ok()
  + get_command_token()
  + get_set_command_token()
}

}

parser_if <|-- simple_token
simple_token <|-- source
simple_token <|-- command
source <|-- source_command
simple_token <|-- status
simple_token <|-- clear
simple_token <|-- address
parser_if <|-- at
parser_if <|-- commands.test
simple_token <|-- commands.xtal_correction
command <|-- commands.specific_command
simple_token <|-- commands.test_flash
commands.test *-- commands.test_flash
simple_token <|-- commands.test_radio
commands.test *-- commands.test_radio
simple_token <|-- commands.test_backup
commands.test *-- commands.test_backup

@enduml