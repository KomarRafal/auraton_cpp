name: Auraton-Unit-Tests

on:
  push:
    branches:
      - test_branch
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  BUILD_FOLDER: build_ninja  
  
jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - name: Checkout reposistory
      uses: actions/checkout@v2
    - name: Checkout submodules
      uses: textbook/git-checkout-submodule-action@master
      with:
        remote: true
#     - name: Checkout Ninja
#       uses: seanmiddleditch/gha-setup-ninja@master

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/$BUILD_FOLDER

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/$BUILD_FOLDER
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      
    - name: Generate
      working-directory: ${{github.workspace}}/$BUILD_FOLDER
      shell: bash
      run: cmake -G Ninja --config $BUILD_TYPE ..

    - name: Build
      working-directory: ${{github.workspace}}/$BUILD_FOLDER
      shell: bash
      run: ninja
      
    - name: Test
      working-directory: ${{github.workspace}}/$BUILD_FOLDER
      shell: bash
      run: ninja test
